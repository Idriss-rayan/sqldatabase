--2
SELECT a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME, COUNT(w.BOOK_ID) AS Book_Count
FROM AUTHOR a
JOIN WRITES w ON a.AUTH_ID = w.AUTH_ID
GROUP BY a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME
HAVING COUNT(w.BOOK_ID) > 1;


--3

SELECT b.TITLE
FROM BOOK b
LEFT JOIN REVIEWS r ON b.BOOK_ID = r.BOOK_ID
WHERE r.BOOK_ID IS NULL;


--4

SELECT PUB_YEAR, COUNT(*) AS Books_Published
FROM BOOK
GROUP BY PUB_YEAR
ORDER BY PUB_YEAR;


--5

SELECT (MAX(PUB_YEAR) - MIN(PUB_YEAR)) AS Year_Difference
FROM BOOK;


--6

SELECT p.NAME, AVG(r.RATING) AS Average_Rating
FROM PUBLISHER p
JOIN PUBLISHES pb ON p.PUB_ID = pb.PUB_ID
JOIN REVIEWS r ON pb.BOOK_ID = r.BOOK_ID
GROUP BY p.NAME
ORDER BY Average_Rating DESC
LIMIT 1;

--7

SELECT b.TITLE, COUNT(r.REV_ID) AS Review_Count
FROM BOOK b
LEFT JOIN REVIEWS r ON b.BOOK_ID = r.BOOK_ID
GROUP BY b.BOOK_ID, b.TITLE;


--8

SELECT b.TITLE, AVG(r.RATING) AS Average_Rating
FROM BOOK b
JOIN REVIEWS r ON b.BOOK_ID = r.BOOK_ID
GROUP BY b.BOOK_ID, b.TITLE
HAVING COUNT(r.REV_ID) >= 2
ORDER BY Average_Rating ASC
LIMIT 1;


--9

SELECT a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME, COUNT(w.BOOK_ID) AS Book_Count
FROM AUTHOR a
JOIN WRITES w ON a.AUTH_ID = w.AUTH_ID
JOIN BOOK b ON w.BOOK_ID = b.BOOK_ID
WHERE b.PUB_YEAR < 1950
GROUP BY a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME
ORDER BY Book_Count DESC
LIMIT 1;

--10

SELECT a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME, AVG(r.RATING) AS Average_Rating
FROM AUTHOR a
JOIN WRITES w ON a.AUTH_ID = w.AUTH_ID
JOIN REVIEWS r ON w.BOOK_ID = r.BOOK_ID
GROUP BY a.AUTH_ID, a.FIRST_NAME, a.LAST_NAME
ORDER BY Average_Rating DESC
LIMIT 1;

--11(bonus)
  --a)
ALTER TABLE REVIEWS ADD STATUS VARCHAR(10);
  --b)
WITH Avg_Rating AS (
    SELECT AVG(RATING) AS AvgRating
    FROM REVIEWS
)
UPDATE REVIEWS
SET STATUS = CASE 
    WHEN RATING > (SELECT AvgRating + 0.5 FROM Avg_Rating) THEN 'Excellent'
    WHEN RATING < (SELECT AvgRating - 0.5 FROM Avg_Rating) THEN 'Poor'
    ELSE 'Average'
END;


